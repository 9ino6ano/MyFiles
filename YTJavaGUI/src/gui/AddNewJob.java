/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import javax.swing.JOptionPane;
import java.util.*;
import java.io.*;
/**
 *
 * @author Pana
 */
public class AddNewJob extends javax.swing.JFrame {
    //The array-list for storing job objects
    ArrayList<Job> objJob;
    /**
     * Creates new form AddNewJob
     */
    public AddNewJob() {
        //this builds coding for user interface N.B.
        initComponents();
        objJob = new ArrayList<Job>();
        populateArrayList();
    }
    //a method for reading from a file
    //before we add new jobs, we first see which are the existing jobs before entering a new one.
    public void populateArrayList(){
        //this method gets the contents in a file
        //we must catch an exeption, normally we throw exeption
        try {
            //for reading into the file we use file input
            FileInputStream isFile = new FileInputStream("Jobs.dat");
            ObjectInputStream inFile = new ObjectInputStream(isFile);
            
            boolean endOfFile = false;
            
            while (!endOfFile) {                
                try {//while reading we will add objects into the array from the file
                    //we will try reading from the file
                    // read= get info from array job = make sure its of type jop objJob = save it to an array
                    objJob.add((Job)inFile.readObject());//the object that gets returned is of (type object) = cast the object to return.
                    // after while loop you must close the file
                } catch (EOFException e) {
                    endOfFile = true;
                }
                catch(Exception ex){
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
            //we finished reading from the file
            inFile.close();
            /**
             *What happened in this method is , it will first go to the file (jobs.txt),
             *which we do not have,but it will show the user an exception message(which we catch)
             * thereafter show program(doesn't stop program, calls method for creating the file) for entering a new object.
             */
        }
        catch (IOException e) {
            
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
       
        
    }
    //a method for saving the created jobs back into the file
    public void saveJobToFile(){
        //for writing into the file we use file output
        try {
            FileOutputStream ofFlle = new FileOutputStream("Jobs.dat");
            ObjectOutputStream outFile = new ObjectOutputStream(ofFlle);
            //we read/write into the same file
            for (int i = 0; i < objJob.size(); i++) {
                //what we want to write to file is the active Arraylist<> = jobs array
                outFile.writeObject(objJob.get(i));
                //this code writes into the file an object at the [pos i] of the array
                
            }
            //after all records have been processed , close the file
            outFile.close();
            //alert the user that objects have been saved to the file
            JOptionPane.showMessageDialog(null, "Data Successfully Saved.");
            this.dispose();  
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jobName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jobSalary = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add a new Job");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Create A New Job By Entering The Details Below:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Name of the Job:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Salary Of This Job:");

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Pana\\Pictures\\Pics\\save.png")); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jobName, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jobSalary))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 48, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jobName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jobSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(jButton1)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        /**
         *Get the input from the text boxes.
         * 1st test if any input has been entered by the user
         */
        if (jobName.getText().isEmpty()&& jobSalary.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Details in the fields provided.");
        }
        else{
          //if data has been entered , declare variables and assigned them to the text input  
        String jName= jobName.getText().trim();//for white-space if entered by user
        String jSalary=jobSalary.getText().trim();
        //create the job object to save the input to an array = into a file
        Job jobObject = new Job(Double.parseDouble(jSalary), jName);
        //now add this object into an array
        objJob.add(jobObject);
        //the job has been saved to an array
        saveJobToFile();
        //this method saves all the jobs objects into a file
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewJob().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jobName;
    private javax.swing.JTextField jobSalary;
    // End of variables declaration//GEN-END:variables
}
